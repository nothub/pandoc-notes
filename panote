#!/usr/bin/env bash

set -Eeuo pipefail

log() {
  echo >&2 "$*"
}

usage() {
  cat <<EOM
Usage: $(basename "${BASH_SOURCE[0]}") [-n name] [-b name] [-v] [-h]

Available options:
-n    Initialize new notes directory
-b    Compile only specified notes
-v    Enable verbose output
-h    Print this help and exit
EOM
  exit
}

check_dependency() {
  if ! command -v "$1" >/dev/null 2>&1; then
    echo "missing dependency: $1"
    exit 1
  fi
}

init() {
  if [[ -d "$dir_notes"/"$1" ]]; then
    log "directory present: $(realpath "$dir_notes"/"$1")"
    exit 1
  fi

  log "creating notes directory: $(realpath "$dir_notes"/"$1")"
  mkdir -p "$dir_notes"/"$1"

  cat <<EOF >"$dir_notes"/"$1"/metadata.yaml
---
title: "To foo a bar"
date: "1 January 1970"
---
EOF

  cat <<EOF >"$dir_notes"/"$1"/00_notes.md
# Heading Level 1

Example Text

## Heading Level 2

Example figure

![Coffee](https://www.w3.org/Icons/Misc/coffee.gif)
EOF

  exit 0
}

build() {
  echo building "$(realpath "$1")"

  if [[ ! -d $1 ]]; then
    log "not a directory: $(realpath "$1")"
    return
  fi

  if [[ ! -f $1/metadata.yaml ]]; then
    log "missing metadata.yaml in: $(realpath "$1")"
    return
  fi

  if [[ -z $(find "$1" -iname "*.md") ]]; then
    log "no markdown files in: $(realpath "$1")"
    return
  fi

  mkdir -p "$dir_out"

  cd "$1"

  pandoc --standalone \
    --fail-if-warnings \
    --highlight-style tango \
    --number-sections \
    --table-of-contents \
    --toc-depth=2 \
    --from=markdown \
    --to=latex \
    --pdf-engine=xelatex \
    --template="$dir_root"/common/eisvogel.tex \
    metadata.yaml \
    *.md \
    "$dir_root"/common/metadata.yaml \
    --output="$dir_out"/"$1".pdf

  cd ..
}

check_dependency pandoc

dir_root="$(dirname "$(readlink -f -- "$0")")"
dir_notes=$dir_root/notes
dir_out=$dir_root/out

build_target=""

while getopts n:b:vh opt; do
  case $opt in
  n) init "$OPTARG" ;;
  b) build_target="$OPTARG" ;;
  v) set -x ;;
  h | *) usage ;;
  esac
done

cd "$dir_notes"
if [[ -n $build_target ]]; then
  build "$build_target"
else
  for dir in *; do
    build "$dir"
  done
fi
